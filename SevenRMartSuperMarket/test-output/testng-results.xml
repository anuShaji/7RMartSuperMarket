<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-08T19:00:24 GST" name="Suite" finished-at="2024-10-08T19:00:49 GST" duration-ms="25068">
    <groups>
    </groups>
    <test started-at="2024-10-08T19:00:24 GST" name="testNgExtentReport" finished-at="2024-10-08T19:00:49 GST" duration-ms="25068">
      <class name="testscript.LoginTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscript.LoginTest@38b27cdc]" started-at="2024-10-08T19:00:24 GST" name="beforeMethod" finished-at="2024-10-08T19:00:28 GST" duration-ms="3228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserIsAbleToLoginUsingValidCredentials()[pri:0, instance:testscript.LoginTest@38b27cdc]" started-at="2024-10-08T19:00:28 GST" name="verifyUserIsAbleToLoginUsingValidCredentials" finished-at="2024-10-08T19:00:39 GST" duration-ms="11706" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//li[text()='Dashboard']"}
  (Session info: chrome=129.0.6668.90)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.23.1', revision: '656257d8e9'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e2cf9a4fdd20ac672d682c3601df729e, findElement {value=//li[text()='Dashboard'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 129.0.6668.90, chrome: {chromedriverVersion: 129.0.6668.89 (951c0b97221f..., userDataDir: C:\Users\ANUPAM~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50231}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50231/devtoo..., se:cdpVersion: 129.0.6668.90, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e2cf9a4fdd20ac672d682c3601df729e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//li[text()='Dashboard']"}
  (Session info: chrome=129.0.6668.90)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.23.1', revision: '656257d8e9'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e2cf9a4fdd20ac672d682c3601df729e, findElement {value=//li[text()='Dashboard'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 129.0.6668.90, chrome: {chromedriverVersion: 129.0.6668.89 (951c0b97221f..., userDataDir: C:\Users\ANUPAM~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50231}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50231/devtoo..., se:cdpVersion: 129.0.6668.90, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e2cf9a4fdd20ac672d682c3601df729e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy14.isDisplayed(Unknown Source)
at pages.LoginPage.isDashboardLoaded(LoginPage.java:41)
at testscript.LoginTest.verifyUserIsAbleToLoginUsingValidCredentials(LoginTest.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsAbleToLoginUsingValidCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@38b27cdc]" started-at="2024-10-08T19:00:39 GST" name="afterMethod" finished-at="2024-10-08T19:00:40 GST" duration-ms="274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserIsAbleToLoginUsingValidCredentials status=FAILURE method=LoginTest.verifyUserIsAbleToLoginUsingValidCredentials()[pri:0, instance:testscript.LoginTest@38b27cdc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscript.LoginTest@38b27cdc]" started-at="2024-10-08T19:00:40 GST" name="beforeMethod" finished-at="2024-10-08T19:00:42 GST" duration-ms="2404" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserIsUnableToLoginWithInvalidCredentials()[pri:0, instance:testscript.LoginTest@38b27cdc]" started-at="2024-10-08T19:00:42 GST" name="verifyUserIsUnableToLoginWithInvalidCredentials" finished-at="2024-10-08T19:00:43 GST" duration-ms="532" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsUnableToLoginWithInvalidCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@38b27cdc]" started-at="2024-10-08T19:00:43 GST" name="afterMethod" finished-at="2024-10-08T19:00:43 GST" duration-ms="198" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserIsUnableToLoginWithInvalidCredentials status=SUCCESS method=LoginTest.verifyUserIsUnableToLoginWithInvalidCredentials()[pri:0, instance:testscript.LoginTest@38b27cdc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscript.LoginTest@38b27cdc]" started-at="2024-10-08T19:00:43 GST" name="beforeMethod" finished-at="2024-10-08T19:00:45 GST" duration-ms="2627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserIsUnableToLoginWithInvalidPasswordAndValidUserName()[pri:0, instance:testscript.LoginTest@38b27cdc]" started-at="2024-10-08T19:00:45 GST" name="verifyUserIsUnableToLoginWithInvalidPasswordAndValidUserName" finished-at="2024-10-08T19:00:46 GST" duration-ms="581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsUnableToLoginWithInvalidPasswordAndValidUserName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@38b27cdc]" started-at="2024-10-08T19:00:46 GST" name="afterMethod" finished-at="2024-10-08T19:00:46 GST" duration-ms="172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserIsUnableToLoginWithInvalidPasswordAndValidUserName status=SUCCESS method=LoginTest.verifyUserIsUnableToLoginWithInvalidPasswordAndValidUserName()[pri:0, instance:testscript.LoginTest@38b27cdc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testscript.LoginTest@38b27cdc]" started-at="2024-10-08T19:00:46 GST" name="beforeMethod" finished-at="2024-10-08T19:00:49 GST" duration-ms="2699" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyUserIsUnableToLoginWithValidPasswordAndInalidUserName()[pri:0, instance:testscript.LoginTest@38b27cdc]" started-at="2024-10-08T19:00:49 GST" name="verifyUserIsUnableToLoginWithValidPasswordAndInalidUserName" finished-at="2024-10-08T19:00:49 GST" duration-ms="435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsUnableToLoginWithValidPasswordAndInalidUserName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@38b27cdc]" started-at="2024-10-08T19:00:49 GST" name="afterMethod" finished-at="2024-10-08T19:00:49 GST" duration-ms="159" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserIsUnableToLoginWithValidPasswordAndInalidUserName status=SUCCESS method=LoginTest.verifyUserIsUnableToLoginWithValidPasswordAndInalidUserName()[pri:0, instance:testscript.LoginTest@38b27cdc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testscript.LoginTest -->
    </test> <!-- testNgExtentReport -->
  </suite> <!-- Suite -->
</testng-results>
